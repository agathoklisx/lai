/**
* str.du
*
* Testing the builtin str() function
*
* str() returns a value as a string
*/

assert(str(10) == "10");
assert(str(10.2) == "10.2");
assert(str("hello") == "hello");
assert(str([1, 2]) == "[1, 2]");
assert(str([1, [2, 3]]) == "[1, [2, 3]]");
assert(str({"test": [1, 2, {"ok": 10}]}) == '{"test": [1, 2, {"ok": 10}]}');

def testing() {}

assert(str(testing) == "<fn testing>");

class Test {
    init() {
        this.x = 10;
    }

    static test() {}
}

assert(str(Test) == "<cls Test>");
assert(str(Test()) == "<Test instance>");
assert(str(Test().init) == "<bound method init>");
assert(str(Test().test) == "<static method test>");
assert(str(Test().x) == "10");

assert(str(str) == "<native fn>");